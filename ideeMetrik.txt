55 gesamt

20 cc codons (37%)
25 nicht ?nderbar (45%)
10 erfolgreich ge?ndert (18%)

am Ende also 30 cc codons (55%) --> bewerten

f?r cc: 10 			*20 (Anzahl)	
f?r ch: (6+7+9+8+8+7+7+8+9+7)/Anzahl = 8/10 --> 0,8  #durch maximal wert 10 teilen

((276)/30) = 9,2
9,2*0,55 = 5.06

log(5.06) = 0,7 -->  lieber durch 10 teilen


stufe 1: nur die änderungen betrachten
stufe 2: in betracht der gesamt CU
Stufe 3: aminosäure-Tausch

-------------------------------------------------------------------

--------

### 4-4-2-1 Schema: 
noch erläutern

### Stufe 1 - Austausch-Bewertung (Edit Score):
Gibt an, wie stark ein Codon durchschnittlich mutiert werden musste, um in ein passendes Codon des zirkulären Codes überführt werden zu müssen. 
Nur Blick auf Kategorie 2 --> Bewertung nach 4-4-2-1 Schema --> Score durch Anzahl in Kat-2 --> diesen Mittelwert durch 10 zur Normierung --> Score zwischen 0 und 1
Score nahe 0 --> schlecht (viele und schwerwiegende Mutationen), Score nahe 1: gut --> einfache Mutationen (wenige und unbedeutende Änderungen)
Extrem: Score = 0 --> maximal mögliche Veränderung der Sequenz oder default Wert bei einer Kat der Länge 0, Score = 1 --> keine Änderung

### Score 2 - Distanz zum perfekten Austausch (Edit distance):
Gibt an, wie gut eine Sequenz durch Mutationen in eine Sequenz aus zirkulären Codes überführt werden konnte. 
Distanz zu 100% cc Codons --> Kat2 + kat3 --> neue Verhältnisse berechnen --> n-cc % + cc % *(1-editScore)
Score nahe 0: gut --> geringe distanz, Score nahe 1: schlecht
Extrem: Score = 0 --> Sequenz ist perfekt (nur cc codons), Score = 1 --> Sequenz enthält kein cc Codon muss also noch maximal verändert werden. 

Extremfälle (Kat1/Kat2/kat3):

0/50/50:
--> Edit score: = 0,7
--> Edit distance: 0,5 + (0,5*0,3) = 0,65

50/0/50
--> Edit score: = 0
--> Edit distance: 0,5 + 0 = 0,5

50/50/0
--> Edit score: = 0,7
--> Edit distance: 0 + (0,5*0,3) = 0,15

0/0/100
--> Edit score: = 0
--> Edit distance: 1 + 0 = 1

100/0/0
--> Edit score: = 0
--> Edit distance: 0 + 0 = 0

0/100/0
--> Edit score: = 0,7
--> Edit distance: 0 + 1*0,3 = 0,3

Verteilungsfälle (Kat1/Kat2/kat3):

20/40/40
--> Edit score: = 0,7
--> Edit distance: 0,5 + (0,5*0,3) = 0,65

40/40/20
--> Edit score: = 0,7
--> Edit distance: 0,33 + (0,66*0,3) = 0,53

40/20/40
--> Edit score: = 0,7
--> Edit distance: 0,66 + (0,33*0,3) = 0,76


15/25/60
--> Edit score: = 0,7
--> Edit distance: 0,71 + (0,29*0,3) = 0,8

60/15/25
--> Edit score: = 0,7
--> Edit distance: 0,62 + (0,38*0,3) = 0,73

25/15/60
--> Edit score: = 0,7
--> Edit distance: 0,8 + (0,2*0,3) = 0,86

25/60/15
--> Edit score: = 0,7
--> Edit distance: 0,2 + (0,8*0,3) = 0,44


25/60/15
--> Edit score: = 0,9
--> Edit distance: 0,2 + (0,8*0,1) = 0,28

25/60/15
--> Edit score: = 0,2
--> Edit distance: 0,2 + (0,8*0,8) = 0,84


### Stufe 3 - Amino-Austausch-Score (amino edit score)

überhaupt beachten ? Wenn ja --> Stufe 4 zusammen mit normalem edit score




---------------------------------------------------------------------------------------


40 cc codons (73%)

10*30
+6+7+9+8+8+7+7+8+9+7
=376/40 = 9,4
9,4*0,73 = 6,7
log (6,7) = 0,83
------------------------------------

T = True, S = Swap, F = False

10: T-T-T 
9:  T-T-S
8:  T-T-F
7:  T-S-T // S-T-T
6:  T-F-T // F-T-T // T-S-S // S-T-S
5:  T-S-F // S-T-F // F-T-S // T-F-S

Unsprungscodon:   AAA

10                AAA         #4+4+2
9                 AAG         #4+4+1
8             AAT / AAC       #4+4+0
7             AGA / GAA
6       ATA / ACA / TAA / CAA / AGG / GAG
5   AGT / AGC / GAT / GAC / TAG / CAG / ATG / ACG


------------------------------------
------------------------------------

50 AA 

40 gleichgeblieben
    davon 20 weil cc        --> score berechnen aber wie, +10 oder nach matrix? Werden dann nicht zirkuläre codes mit "guten" ursprungs aminosäuren belohnt?
    und   20 weil threshold --> wie oben

10 verändert --> score zwischen 0 und ~4

teilen durch (verändert + gleich aber cc)  

Ergebis z.B. 5*0,8 = 4 --> log(4) = 0,6

------------------

zusammenbringen mit c_score:
idee: (4+6,7) /2 und dann log ?





TODO: 

- Metrik aufschreiben
- Namen für ausgabescore und weiteres wie z.B end-codeusage etc
- UPAC Codes entfernen und die letzten beiden druchlaufen lassen
- Änderugnscore von Gesamt score trennen in tabelle
- Vergleich zwischen Soll und Ist (Erwartungswert) --> evtl grafik dazu












